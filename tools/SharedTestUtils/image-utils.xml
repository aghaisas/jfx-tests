<?xml version="1.0" encoding="UTF-8"?>

<project name="image-utils" default="download-images" basedir=".">
    <dirname property="iu.dir" file="${ant.file.image-utils}"/>

    <property name="image.dir" location="${basedir}/images-svn"/>
    
    <target name="check-image-dir">
        <mkdir dir="${image.dir}"/>
        <property name="dot.image.properties" location="${basedir}/.image.properties"/>
        <available file="${dot.image.properties}" type="file" property="dot.image.properties.exists"/>
    </target>
    
    <target name="load-image-properties" if="image.properties" depends="check-image-dir">
        <property file="${image.properties}" prefix="images."/>
    </target>
    

    <target name="compare.image.properties" depends="check-image-dir" if="dot.image.properties.exists" >
        <property file="${dot.image.properties}" prefix="test.images."/>
        <condition property="same.image.properties">
            <and>
                <equals arg1="${images.version}" arg2="${test.images.version}"/>
                <equals arg1="${images.repository}" arg2="${test.images.repository}"/>
                <equals arg1="${images.module}" arg2="${test.images.module}"/>
            </and>
        </condition>
    </target>
    
    <target name="fail-no-image-repository" unless="images.repository">
        <fail message="No image repository!"/>
    </target>
    
    <target name="fail-no-image-version" unless="images.version">
        <fail message="No image version!"/>
    </target>
    <target name="download-images" unless="fxsqe.nosvn">
        <antcall target="-do-download-images" />
    </target>
    <target name="-do-download-images" depends="load-image-properties, compare.image.properties, fail-no-image-repository, fail-no-image-version" 
            unless="same.image.properties">
        <echo message="Checking out version ${images.version} of ${images.repository}/${images.module} to ${image.dir}/${images.module}"/>
        <available file="${image.dir}/${images.module}" type="dir" property="images.checked.out"/>
        <antcall target="-svn-checkout"/>
        <antcall target="-svn-update"/>
        <propertyfile file="${dot.image.properties}">
            <entry key="version" value="${images.version}"/>
            <entry key="repository" value="${images.repository}"/>
            <entry key="module" value="${images.module}"/>
        </propertyfile>
    </target>

    <target name="-svn-checkout" unless="images.checked.out">        
        <mkdir dir="${image.dir}"/>
        <exec executable="svn" dir="${image.dir}" failonerror="true" failifexecutionfails="true">
            <arg line="checkout"/>
            <arg line="--non-interactive"/>
            <arg line=" --trust-server-cert"/>
            <arg line="${images.repository}/${images.module}"/>
            <arg line="--revision"/>
            <arg line="${images.version}"/>
            <arg line="${images.module}"/>
        </exec>
    </target>

    <target name="-svn-update" if="images.checked.out">
        <exec executable="svn" dir="${image.dir}/${images.module}" failonerror="true" failifexecutionfails="true">
            <arg line="update"/>
            <arg line="--revision"/>
            <arg line="${images.version}"/>
            <arg line="--non-interactive"/>
            <arg line=" --trust-server-cert"/>
        </exec>
    </target>

    <target name="-pre-compile-test" depends="download-images"/>
</project>
